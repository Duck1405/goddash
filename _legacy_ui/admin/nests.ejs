<head>
    <title><%= settings.name %></title>
    <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
    <link rel="stylesheet" href="../assets/tailwind.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>
    <!-- Inter font -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  </head>
  
  <body class="bg-gray-100" style="font-family: 'Inter', sans-serif;">
    <div>
      <%- include('../components/navigation') %>
      <div class="md:pl-48 flex flex-col flex-1 h-screen">
        <main class="flex-1 pb-32">
          <div class="py-6">
            <% /* Skeleton loader, lasts about 0.3s to let the page content load */ %>
            <%- include('../components/skeleton') %>
            <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
              <!-- Content -->
              <div class="lg:flex lg:items-center lg:justify-between rounded-3xl mb-8">
                <div class="min-w-0 flex-1">
                  <div class="flex">
                    <div class="relative">
                      <div class="bg-gray-200 rounded-2xl h-11 w-11 text-center flex text-gray-400">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 mt-3 ml-3">
                          <path fill-rule="evenodd" d="M12 6.75a5.25 5.25 0 0 1 6.775-5.025.75.75 0 0 1 .313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 0 1 1.248.313 5.25 5.25 0 0 1-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 1 1 2.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0 1 12 6.75ZM4.117 19.125a.75.75 0 0 1 .75-.75h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75h-.008a.75.75 0 0 1-.75-.75v-.008Z" clip-rule="evenodd" />
                          <path d="m10.076 8.64-2.201-2.2V4.874a.75.75 0 0 0-.364-.643l-3.75-2.25a.75.75 0 0 0-.916.113l-.75.75a.75.75 0 0 0-.113.916l2.25 3.75a.75.75 0 0 0 .643.364h1.564l2.062 2.062 1.575-1.297Z" />
                          <path fill-rule="evenodd" d="m12.556 17.329 4.183 4.182a3.375 3.375 0 0 0 4.773-4.773l-3.306-3.305a6.803 6.803 0 0 1-1.53.043c-.394-.034-.682-.006-.867.042a.589.589 0 0 0-.167.063l-3.086 3.748Zm3.414-1.36a.75.75 0 0 1 1.06 0l1.875 1.876a.75.75 0 1 1-1.06 1.06L15.97 17.03a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                        </svg>
                      </div>
                    </div>
                    <div class="relative ml-4">
                      <h2 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight">Nests</h2>
                      <p class="text-xs font-thin text-gray-500">View and explore nests and eggs.</p>
                    </div>
                  </div>
                </div>
                <div class="mt-5 flex lg:ml-4 lg:mt-0">
                  <div class="flex space-x-4 items-center">
                    <input type="text" id="search" placeholder="Search nests and eggs..." class="px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 text-sm rounded-xl placeholder:text-gray-400 text-gray-600">
                  </div>
                </div>
              </div>
  
              <!-- Stats Overview -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div class="bg-white rounded-lg border border-gray-200 shadow-sm p-6">
                  <h3 class="text-sm font-medium text-gray-500">Total Nests</h3>
                  <p class="mt-2 text-3xl font-semibold text-gray-900" id="totalNests">-</p>
                </div>
                <div class="bg-white rounded-lg border border-gray-200 shadow-sm p-6">
                  <h3 class="text-sm font-medium text-gray-500">Total Eggs</h3>
                  <p class="mt-2 text-3xl font-semibold text-gray-900" id="totalEggs">-</p>
                </div>
              </div>
  
              <!-- Nests List -->
              <div id="nestsContainer" class="space-y-6">
                <!-- Nests will be dynamically inserted here -->
              </div>
  
              <script>
                let allNests = [];
                let nestsEggs = new Map(); // Map to store eggs for each nest
                let expandedNests = new Set(); // Track which nests are expanded
                
                document.addEventListener('DOMContentLoaded', () => {
                  loadNests();
                  setupEventListeners();
                  document.getElementById('content').classList.remove('hidden');
                });
  
                function setupEventListeners() {
                  let timeout;
                  document.getElementById('search').addEventListener('input', (e) => {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => {
                      filterNestsAndEggs(e.target.value.toLowerCase());
                    }, 300);
                  });
                }
  
                async function loadNests() {
                  try {
                    const response = await fetch('/api/nests?per_page=10000');
                    const data = await response.json();
                    allNests = data.data;
                    document.getElementById('totalNests').textContent = allNests.length;
                    
                    // Initial display without eggs
                    displayNests(allNests);
                  } catch (error) {
                    console.error('Error loading nests:', error);
                    showError('Failed to load nests');
                  }
                }
  
                async function loadEggsForNest(nestId) {
                  if (nestsEggs.has(nestId)) {
                    return nestsEggs.get(nestId);
                  }
  
                  try {
                    const response = await fetch(`/api/nests/${nestId}/eggs?include=variables,config&per_page=10000`);
                    const data = await response.json();
                    nestsEggs.set(nestId, data.data);
                    return data.data;
                  } catch (error) {
                    console.error(`Error loading eggs for nest ${nestId}:`, error);
                    showError('Failed to load eggs');
                    return [];
                  }
                }
  
                function filterNestsAndEggs(searchTerm) {
                  let filteredNests = allNests;
                  if (searchTerm) {
                    filteredNests = allNests.filter(nest => {
                      const matchesNest = nest.attributes.name.toLowerCase().includes(searchTerm) ||
                                        nest.attributes.description.toLowerCase().includes(searchTerm);
                      
                      // Also check eggs if the nest is expanded
                      if (expandedNests.has(nest.attributes.id)) {
                        const eggs = nestsEggs.get(nest.attributes.id) || [];
                        const matchesEggs = eggs.some(egg => 
                          egg.attributes.name.toLowerCase().includes(searchTerm) ||
                          egg.attributes.description.toLowerCase().includes(searchTerm)
                        );
                        return matchesNest || matchesEggs;
                      }
                      
                      return matchesNest;
                    });
                  }
                  displayNests(filteredNests);
                }
  
                function displayNests(nests) {
                  const container = document.getElementById('nestsContainer');
                  container.innerHTML = '';
  
                  nests.forEach(nest => {
                    const isExpanded = expandedNests.has(nest.attributes.id);
                    const nestDiv = document.createElement('div');
                    nestDiv.className = 'bg-white rounded-lg border border-gray-200 shadow-sm overflow-hidden';
                    
                    const nestContent = `
                      <div class="p-6 cursor-pointer hover:bg-gray-50 transition-colors" 
                           onclick="toggleNest(${nest.attributes.id})">
                        <div class="flex justify-between items-center">
                          <div>
                            <h3 class="text-lg font-medium text-gray-900">
                              ${nest.attributes.name}
                            </h3>
                            <p class="mt-1 text-sm text-gray-500">
                              ${nest.attributes.description}
                            </p>
                            <div class="mt-2 text-xs text-gray-400">
                              Author: ${nest.attributes.author}
                            </div>
                          </div>
                          <svg class="w-5 h-5 text-gray-500 transition-transform duration-200 ${isExpanded ? 'transform rotate-180' : ''}" 
                               fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                          </svg>
                        </div>
                      </div>
                      <div id="eggs-${nest.attributes.id}" class="border-t border-gray-200 ${isExpanded ? '' : 'hidden'}">
                        <div class="p-4 bg-gray-50">
                          <div class="animate-pulse flex justify-center py-8">
                            <svg class="w-8 h-8 text-gray-300 animate-spin" fill="none" viewBox="0 0 24 24">
                              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                          </div>
                        </div>
                      </div>
                    `;
                    
                    nestDiv.innerHTML = nestContent;
                    container.appendChild(nestDiv);
  
                    if (isExpanded) {
                      displayEggs(nest.attributes.id);
                    }
                  });
                }
  
                async function toggleNest(nestId) {
                  const eggContainer = document.getElementById(`eggs-${nestId}`);
                  const arrow = eggContainer.previousElementSibling.querySelector('svg');
                  
                  if (expandedNests.has(nestId)) {
                    expandedNests.delete(nestId);
                    eggContainer.classList.add('hidden');
                    arrow.classList.remove('rotate-180');
                  } else {
                    expandedNests.add(nestId);
                    eggContainer.classList.remove('hidden');
                    arrow.classList.add('rotate-180');
                    displayEggs(nestId);
                  }
                }
  
                async function displayEggs(nestId) {
                  const eggContainer = document.getElementById(`eggs-${nestId}`);
                  const eggs = await loadEggsForNest(nestId);
                  
                  // Update total eggs count
                  let totalEggs = 0;
                  nestsEggs.forEach(eggs => totalEggs += eggs.length);
                  document.getElementById('totalEggs').textContent = totalEggs;
  
                  if (!eggs.length) {
                    eggContainer.innerHTML = `
                      <div class="p-6 text-center text-gray-500">
                        No eggs found in this nest
                      </div>
                    `;
                    return;
                  }
  
                  eggContainer.innerHTML = `
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 p-6">
                      ${eggs.map(egg => `
                        <div class="bg-white rounded-xl border border-gray-200 p-4">
                          <div class="flex justify-between items-start">
                            <div>
                              <h4 class="text-sm font-medium text-gray-900">${egg.attributes.name}</h4>
                              <p class="mt-1 text-xs text-gray-500">${egg.attributes.description}</p>
                            </div>
                            <div class="text-xs text-gray-400">
                              ${egg.attributes.docker_image}
                            </div>
                          </div>
                          ${egg.attributes.config ? `
                            <div class="mt-4 pt-4 border-t border-gray-100">
                              <div class="grid grid-cols-2 gap-4">
                                <div>
                                  <span class="text-xs font-medium text-gray-500">Startup Command</span>
                                  <p class="mt-1 text-xs text-gray-900 font-mono bg-gray-50 p-2 rounded">
                                    ${egg.attributes.startup}
                                  </p>
                                </div>
                                ${egg.attributes.config.files ? `
                                  <div>
                                    <span class="text-xs font-medium text-gray-500">Configuration Files</span>
                                    <p class="mt-1 text-xs text-gray-900">
                                      ${Object.keys(egg.attributes.config.files).join(', ')}
                                    </p>
                                  </div>
                                ` : ''}
</div>
                            ${egg.attributes.variables ? `
                              <div class="mt-4">
                                <span class="text-xs font-medium text-gray-500">Environment Variables</span>
                                <div class="mt-2 grid grid-cols-2 gap-2">
                                  ${egg.attributes.variables.map(variable => `
                                    <div class="text-xs">
                                      <span class="font-mono text-gray-600">${variable.name}</span>
                                      ${variable.description ? `
                                        <p class="text-gray-500 truncate" title="${variable.description}">
                                          ${variable.description}
                                        </p>
                                      ` : ''}
                                    </div>
                                  `).join('')}
                                </div>
                              </div>
                            ` : ''}
                          </div>
                        ` : ''}
                      </div>
                    `).join('')}
                  </div>
                `;
              }

              function showError(message) {
                const container = document.getElementById('nestsContainer');
                container.innerHTML = `
                  <div class="bg-white rounded-2xl shadow-sm p-6">
                    <div class="flex items-center text-red-600">
                      <svg class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                              d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      ${message}
                    </div>
                  </div>
                `;
              }
            </script>
          </div>
        </div>
      </main>
      <%- include('../components/footer') %>
    </div>
  </div>
</body>