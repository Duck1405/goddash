<head>
  <title><%= settings.name %></title>
  <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
  <link rel="stylesheet" href="../assets/tailwind.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>
  <!-- Inter font -->
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script>
    // Fetch the latest version from the site
    fetch('https://atqr.pages.dev/heliactyl.json')
      .then(response => response.json())
      .then(data => {
        const currentVersion = '<%= settings.version %>';
        const latestVersion = data.prism_latest;

        // Update the version information in the content
        const versionSpan = document.getElementById('currentVersion');
        const releaseSpan = document.getElementById('releaseInfo');
        const versionStatusSpan = document.getElementById('versionStatus');

        versionSpan.textContent = currentVersion;

        if (currentVersion === latestVersion) {
          versionStatusSpan.textContent = 'You are running the latest version. Good job!';
          versionStatusSpan.classList.add('text-gray-600', 'text-xs', 'pt-2');
        } else {
          const link = document.createElement('a');
          link.href = 'https://github.com/mattjamesindustries/Prism/releases/tag/' + latestVersion;
          link.classList.add('text-amber-500', 'transition', 'hover:text-amber-600', 'font-medium');
          link.textContent = 'here';

          const linkText = document.createTextNode(`Prism ${latestVersion} is ready to be updated to. Please click `);
          versionStatusSpan.appendChild(linkText);
          versionStatusSpan.appendChild(link);
          versionStatusSpan.appendChild(document.createTextNode(' to download it'));
          versionStatusSpan.classList.add('text-amber-500', 'text-xs', 'pt-2');
        }

        // Show the content
        document.getElementById('content').classList.remove('hidden');
      })
      .catch(error => {
        console.error('Error fetching latest version:', error);
        // Show the content even if the fetch fails
        document.getElementById('content').classList.remove('hidden');
      });
  </script>
</head>

<body class="bg-gray-100" style="font-family: 'Inter', sans-serif;">
  <div>
    <%- include('../components/navigation') %>
    <div class="md:pl-48 flex flex-col flex-1 h-screen">
      <main class="flex-1 pb-32">
        <div class="py-6">
          <% /* Skeleton loader, lasts about 0.3s to let the page content load */ %>
          <%- include('../components/skeleton') %>
          <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
            <!-- Content -->
            <div class="lg:flex lg:items-center lg:justify-between rounded-3xl mb-8">
              <div class="min-w-0 flex-1">
                <div class="flex">
                  <div class="relative">
                    <div class="bg-gray-200 rounded-2xl h-11 w-11 text-center flex text-gray-400">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 mt-3 ml-3">
                        <path fill-rule="evenodd" d="M2.25 13.5a8.25 8.25 0 0 1 8.25-8.25.75.75 0 0 1 .75.75v6.75H18a.75.75 0 0 1 .75.75 8.25 8.25 0 0 1-16.5 0Z" clip-rule="evenodd" />
                        <path fill-rule="evenodd" d="M12.75 3a.75.75 0 0 1 .75-.75 8.25 8.25 0 0 1 8.25 8.25.75.75 0 0 1-.75.75h-7.5a.75.75 0 0 1-.75-.75V3Z" clip-rule="evenodd" />
                      </svg>      
                    </div>
                  </div>
                  <div class="relative ml-4">
                    <h2 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight">Overview</h2>
                    <p class="text-xs font-thin text-gray-500">View an overview of the Prism dashboard.</p>
                  </div>
                </div>
              </div>
            </div>
            <div class="rounded-2xl bg-blue-100 px-4 py-4 mb-5">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-blue-600">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z" />
                  </svg>                  
                </div>
                <div class="ml-3">
                  <h3 class="text-md font-medium tracking-tight text-gray-700">Prism is moving towards a new React based interface. Within the next few releases, you'll see a new button here to test the new admin portal.</h3>
                </div>
              </div>
            </div>
            <% if (req.query.err) { %>
            <div class="rounded-lg bg-white shadow-sm p-8 mb-5">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-gray-400">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-md font-medium tracking-tight text-gray-700">An error was encountered</h3>
                  <div class="mt-1 text-sm text-gray-500">
                    <p>Error code: <code><%= req.query.err %></code></p>
                  </div>
                </div>
              </div>
            </div>
            <% } %>
            <div class="lg:flex lg:items-center lg:justify-between p-8 pb-1 border border-gray-200 rounded-3xl">
              <div class="min-w-0 flex-1 ml-4">
                <h2 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight">Prism beta version</h2>
                <p class="text-xs mt-2 font-thin text-gray-500 mb-2">
                  This dashboard is running Prism version <span class="bg-gray-200 px-2 py-1 mb-2 rounded-full" id="currentVersion"></span>
                </p>
                <span id="versionStatus"></span>

                <div class="border-t border-gray-200 mt-4"></div>
                <img src="https://i.imgur.com/EQ2C6gB.png" class="h-24 rounded-lg">
              </div>
              <div class="mt-5 flex lg:ml-4 lg:mt-0">
                <span class="sm:ml-3 mr-3">
                  <img src="https://i.imgur.com/H1QKmeo.png" class="h-20 rounded-full bg-white shadow-sm p-3">
                </span>
              </div>
            </div>

<div class="mt-5 lg:flex lg:items-center lg:justify-between p-8 pb-6 border border-gray-200 rounded-3xl">
  <div class="min-w-0 flex-1">
    <div class="flex items-center gap-3">
      <h2 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight">Need to apply changes or experiencing issues?</h2>
      <span id="rebootStatus" class="hidden px-3 py-1 text-sm font-medium rounded-full"></span>
    </div>
    <p class="text-xs mt-2 font-thin text-gray-500">Use the button below to reboot the dashboard.</p>
    
    <div class="mt-4 flex gap-3">
      <button onclick="confirmReboot()" class="inline-flex items-center gap-2 rounded-3xl bg-amber-500 px-6 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-amber-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-amber-600 transition-all duration-200">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.75" stroke="currentColor" class="w-4 h-4">
          <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
        </svg>
        Reboot Prism
      </button>
    </div>
  </div>
</div>

<div class="mt-10">
  <div class="mt-4 flex flex-col">
    <div class="lg:flex lg:items-center lg:justify-between p-8 pb-1 border border-gray-200 rounded-3xl">
      <div class="min-w-0 flex-1 pb-8">
        <h3 class="text-lg font-semibold text-gray-700 sm:truncate tracking-tight">Mono by Prism</h3>
        <p class="text-xs mt-2 font-thin text-gray-500 mb-2">The version of Mono this instance of Prism is running is <code>0.1.0</code></p>
        <button onclick="rebuildPanel()" class="inline-flex items-center rounded-2xl bg-gray-200 px-8 py-2 mt-4 text-sm font-medium text-gray-600 hover:bg-gray-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600">Rebuild panel frontend</button>
      </div>
    </div>
  </div>
</div>

<script>
  function rebuildPanel() {
    fetch('/api/panel/rebuild', {
      method: 'POST'
    })
    .then(response => response.json())
    .then(data => alert(JSON.stringify(data)))
.catch(error => console.error(error));
}

</script>

<script>
// Add this to your existing JavaScript
async function confirmReboot() {
  if (confirm('Are you sure you want to reboot the dashboard? This will disconnect all active users temporarily.')) {
    const statusBadge = document.getElementById('rebootStatus');
    statusBadge.textContent = 'Rebooting...';
    statusBadge.classList.remove('hidden', 'bg-green-50', 'text-green-800', 'bg-red-50', 'text-red-800');
    statusBadge.classList.add('bg-amber-50', 'text-amber-800');
    
    try {
      const response = await fetch('/api/reboot', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        statusBadge.textContent = 'Rebooting dashboard...';
        statusBadge.classList.remove('bg-amber-50', 'text-amber-800');
        statusBadge.classList.add('bg-green-50', 'text-green-800');
        
        // Wait 2 seconds then start checking if the server is back up
        setTimeout(() => checkServerStatus(), 2000);
      } else {
        const data = await response.json();
        throw new Error(data.error || 'Failed to reboot dashboard');
      }
    } catch (error) {
      statusBadge.textContent = 'Reboot failed: ' + error.message;
      statusBadge.classList.remove('bg-amber-50', 'text-amber-800');
      statusBadge.classList.add('bg-red-50', 'text-red-800');
    }
  }
}

function checkServerStatus() {
  const statusBadge = document.getElementById('rebootStatus');
  statusBadge.textContent = 'Waiting for dashboard...';
  
  // Try to fetch the current page
  fetch(window.location.href)
    .then(response => {
      if (response.ok) {
        // Server is back up, reload the page
        window.location.reload();
      } else {
        // Keep checking
        setTimeout(checkServerStatus, 1000);
      }
    })
    .catch(() => {
      // If fetch fails, keep checking
      setTimeout(checkServerStatus, 1000);
    });
}
</script>

<!-- Add this right after the version info card -->
<div class="mt-10">
  <button onclick="toggleLegacyInterface()" class="w-full text-left p-6 bg-transparent rounded-t-lg border border-gray-200 flex justify-between items-center group">
    <div>
      <div class="flex items-center gap-3">
        <h2 class="text-xl font-semibold text-gray-700 tracking-tight">View legacy resources & coins interface</h2>
        <span class="px-3 py-1 text-sm font-medium rounded-full bg-yellow-50 shadow-sm text-yellow-800">
          Deprecated
        </span>
      </div>
      <p class="text-xs font-thin text-gray-500 mt-3">This interface is deprecated and will be removed in the future, it has been around since Heliactyl 12.</p>
    </div>
    <svg id="legacyDropdownIcon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 transform transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>
  
  <div id="legacyInterface" class="hidden overflow-hidden transition-all duration-300 ease-in-out bg-white rounded-b-lg border-x border-b border-gray-200">
    <div class="p-6">
      <!-- Add coins section -->
      <div class="card">
        <div class="card-body">
          <h1 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight mb-4">Add coins</h1>
          <label for="id1" class="text-sm font-medium text-gray-600">Discord ID</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="id1" placeholder="000000000000000000">

          <label for="amount1" class="text-sm font-medium text-gray-600">Amount</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="amount1" placeholder="100">

          <a href="javascript:addCoins()" class="mt-6 transition inline-flex items-center rounded-2xl bg-gray-200 px-8 py-2 text-sm font-medium text-gray-600 hover:bg-gray-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600">
            Add
          </a>
        </div>
      </div>

      <!-- Add resources section -->
      <div class="card mt-8">
        <div class="card-body">
          <h1 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight mb-4">Add resources</h1>
          <label for="id2" class="text-sm font-medium text-gray-600">Discord ID</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="id2" placeholder="000000000000000000">

          <label for="cpu" class="text-sm font-medium text-gray-600">CPU Cores</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="cpu" placeholder="1">

          <label for="memory" class="text-sm font-medium text-gray-600">Memory (GiB)</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="memory" placeholder="2">

          <label for="storage" class="text-sm font-medium text-gray-600">Storage (GiB)</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="storage" placeholder="10">

          <label for="servers" class="text-sm font-medium text-gray-600">Servers</label><br>
          <input type="text" class="mt-3 mb-4 px-4 py-2 focus:border-gray-400 focus:ring-gray-600 border border-gray-200 shadow-sm transition ease-in-out delay-100 group relative flex w-1/4 text-sm justify-center form-control rounded-xl placeholder:text-gray-400 text-gray-600" id="servers" placeholder="5">

          <a href="javascript:addResources()" class="mt-6 transition inline-flex items-center rounded-2xl bg-gray-200 px-8 py-2 text-sm font-medium text-gray-600 hover:bg-gray-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600">
            Add
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function toggleLegacyInterface() {
    const content = document.getElementById('legacyInterface');
    const icon = document.getElementById('legacyDropdownIcon');
    
    if (content.classList.contains('hidden')) {
      // Open dropdown
      content.classList.remove('hidden');
      content.style.maxHeight = content.scrollHeight + 'px';
      icon.style.transform = 'rotate(180deg)';
    } else {
      // Close dropdown
      content.style.maxHeight = '0px';
      icon.style.transform = 'rotate(0deg)';
      // Add hidden class after animation completes
      setTimeout(() => {
        content.classList.add('hidden');
      }, 300);
    }
  }

  // Keep the existing addCoins and addResources functions
  async function addCoins() {
    let id1 = encodeURIComponent(document.getElementById("id1").value);
    let amount1 = encodeURIComponent(document.getElementById("amount1").value);
    document.location.href = `/addcoins?id=${id1}&coins=${amount1}`;
  };

  async function addResources() {
    let id2 = encodeURIComponent(document.getElementById("id2").value);
    let cpu = encodeURIComponent(document.getElementById("cpu").value * 100);
    let memory = encodeURIComponent(document.getElementById("memory").value * 1024);
    let storage = encodeURIComponent(document.getElementById("storage").value * 1024);
    let servers = encodeURIComponent(document.getElementById("servers").value);
    document.location.href = `/addresources?id=${id2}&cpu=${cpu}&ram=${memory}&disk=${storage}&servers=${servers}`;
  };
</script>

            </div>
      </main>
      <%- include('../components/footer') %>
    </div>
  </div>
</body>