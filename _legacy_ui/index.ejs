<!DOCTYPE html>
<html class="h-full">
<head>
  <title><%= settings.name %></title>
  <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
  <link rel="stylesheet" href="../assets/tailwind.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script src="https://unpkg.com/lucide@latest"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" integrity="sha384-tViUnnbYAV00FLIhhi3v/dWt3Jxw4gZQcNoSCxCIFNJVCx7/D55/wXsrNIRANwdD" crossorigin="anonymous">
</head>

<body class="h-full pattern-grid bg-gray-100 font-[Inter]">
  <!-- Alert Component -->
  <div id="alert" class="fixed top-4 right-4 opacity-0 transition-opacity duration-300 max-w-sm">
    <div class="rounded-lg border-2 border-gray-100 bg-white p-4 shadow-lg">
      <div class="flex items-start gap-4">
        <span class="text-green-600">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </span>
        <div class="flex-1">
          <p class="mt-1 text-sm text-gray-700" id="alert-message"></p>
        </div>
        <button onclick="hideAlert()" class="text-gray-500 hover:text-gray-600">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <div class="min-h-screen flex items-center justify-center p-4">
    <div class="w-full max-w-lg">
      <!-- Main Sign In Form -->
      <div id="signin-form">
        <div class="text-center">
          <!--<img
            class="h-20 mx-auto"
            src="https://i.imgur.com/Ubmgyw9.png"
            alt="Logo"
          />-->
          <span class="text-lg font-medium tracking-tight text-gray-800"><%= settings.name %></span>
          <h2 class="text-3xl font-bold tracking-tight text-gray-900 mt-6">
            Sign in to your account
          </h2>
          <p class="mt-4 text-base text-gray-600">
            Welcome back! Please sign in to continue.
          </p>
        </div>
        
        <!-- Standard Login Form -->
        <form onsubmit="handleLogin(event)" class="mt-8 space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Email address</label>
            <input 
              type="email" 
              id="login-email" 
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Enter your email"
            >
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
            <input 
              type="password" 
              id="login-password" 
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Enter your password"
            >
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input type="checkbox" id="remember-me" class="h-4 w-4 rounded border-gray-300 text-black focus:ring-gray-600/50">
              <label class="ml-2 block text-sm text-gray-700">Remember me</label>
            </div>
            <button type="button" onclick="showResetPassword()" class="text-sm font-medium text-gray-700 hover:text-gray-900">Forgot password?</button>
          </div>

          <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-black hover:bg-black/90 focus:outline-none focus:ring-2 focus:ring-black/80 focus:ring-offset-2">
            Sign in
          </button>
        </form>

        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-200"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 text-gray-500 bg-gray-100">Or continue with</span>
            </div>
          </div>

          <div class="mt-6 space-y-4">
            <!-- OAuth Buttons -->
            <a href="/login" class="flex items-center justify-center w-full px-6 py-3 text-base font-medium text-white bg-[#5865F2] rounded-lg hover:bg-[#5865F2]/90 focus:outline-none focus:ring-2 focus:ring-[#5865F2]/80 focus:ring-offset-2 transition-all duration-200">
              <i class="bi bi-discord w-5 h-5 mt-[0.125rem] mr-2" ></i>
              Continue with Discord
            </a>

            <a href="/github/login" class="flex items-center justify-center w-full px-6 py-3 text-white bg-[#24292F] rounded-lg hover:bg-[#24292F]/90 focus:outline-none focus:ring-2 focus:ring-[#24292F]/80 focus:ring-offset-2 transition-all duration-200">
              <i data-lucide="github" class="w-5 h-5 mr-3"></i>
              Continue with GitHub
            </a>

            <a href="/google/login" class="flex items-center justify-center w-full px-6 py-3 text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-200 focus:ring-offset-2 transition-all duration-200">
              <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
              </svg>
              Continue with Google
            </a>

            <!-- Magic Link Button -->
            <button onclick="requestMagicLink()" class="flex items-center justify-center w-full px-6 py-3 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-200 focus:ring-offset-2 transition-all duration-200">
              <i data-lucide="mail" class="w-5 h-5 mr-3"></i>
              Get a magic link
            </button>
          </div>
        </div>

        <p class="mt-8 text-center text-sm text-gray-600">
          Don't have an account?
          <button onclick="showRegisterForm()" class="font-medium text-gray-900 hover:text-gray-700">
            Create an account
          </button>
        </p>
      </div>

      <!-- Registration Form -->
      <div id="register-form" class="hidden">
        <div class="text-center">
          <!--<img
            class="h-20 mx-auto"
            src="https://i.imgur.com/Ubmgyw9.png"
            alt="Logo"
          />-->
          <span class="text-lg font-medium tracking-tight text-gray-800"><%= settings.name %></span>
          <h2 class="text-3xl font-bold tracking-tight text-gray-900 mt-6">
            Create your account
          </h2>
          <p class="mt-4 text-base text-gray-600">
            Fill in the details below to get started.
          </p>
        </div>

        <form onsubmit="handleRegister(event)" class="mt-8 space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Username</label>
            <input 
              type="text" 
              id="register-username"
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Choose a username"
            >
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Email address</label>
            <input 
              type="email" 
              id="register-email"
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Enter your email"
            >
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
            <input 
              type="password" 
              id="register-password"
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Create a strong password"
            >
            <p class="mt-1 text-sm text-gray-500">Must be at least 12 characters with uppercase, lowercase, number and special character.</p>
          </div>

          <div class="g-recaptcha" data-sitekey="<%= settings.api.client.recaptcha.site_key %>"></div>

          <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-black hover:bg-black/90 focus:outline-none focus:ring-2 focus:ring-black/80 focus:ring-offset-2">
            Create account
          </button>
        </form>

        <p class="mt-8 text-center text-sm text-gray-600">
          Already have an account?
          <button onclick="showSignInForm()" class="font-medium text-gray-900 hover:text-gray-700">
            Sign in instead
          </button>
        </p>
      </div>

      <!-- Password Reset Form -->
      <div id="reset-form" class="hidden">
        <div class="text-center">
          <img
            class="h-20 mx-auto"
            src="https://i.imgur.com/Ubmgyw9.png"
            alt="Logo"
          />
          <h2 class="text-3xl font-bold tracking-tight text-gray-900 mt-6">
            Reset your password
          </h2>
          <p class="mt-4 text-base text-gray-600">
            Enter your email address and we'll send you a link to reset your password.
          </p>
        </div>

        <form onsubmit="handlePasswordReset(event)" class="mt-8 space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Email address</label>
            <input 
              type="email" 
              id="reset-email"
              required
              class="appearance-none block w-full px-4 py-3 border border-gray-200 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600/50 focus:border-gray-400 sm:text-sm"
              placeholder="Enter your email"
            >
          </div>

          <div class="g-recaptcha" data-sitekey="<%= settings.api.client.recaptcha.site_key %>"></div>

          <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-black hover:bg-black/90 focus:outline-none focus:ring-2 focus:ring-black/80 focus:ring-offset-2"></button>
            Send reset link
          </button>

          <button type="button" onclick="showSignInForm()" class="mt-4 w-full flex justify-center py-3 px-4 border border-gray-200 rounded-lg shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-200 focus:ring-offset-2">
            Back to sign in
          </button>
        </form>
      </div>
    </div>
  </div>

  <script src="https://www.google.com/recaptcha/api.js" async defer></script>
  <script>
    lucide.createIcons();
    
    // Form visibility functions
    function showRegisterForm() {
      document.getElementById('signin-form').classList.add('hidden');
      document.getElementById('reset-form').classList.add('hidden');
      document.getElementById('register-form').classList.remove('hidden');
    }

    function showSignInForm() {
      document.getElementById('register-form').classList.add('hidden');
      document.getElementById('reset-form').classList.add('hidden');
      document.getElementById('signin-form').classList.remove('hidden');
    }

    function showResetPassword() {
      document.getElementById('signin-form').classList.add('hidden');
      document.getElementById('register-form').classList.add('hidden');
      document.getElementById('reset-form').classList.remove('hidden');
    }

    // Alert handling
    function showAlert(message) {
      const alert = document.getElementById('alert');
      document.getElementById('alert-message').textContent = message;
      alert.classList.remove('opacity-0');
      setTimeout(() => hideAlert(), 5000); // Hide after 5 seconds
    }

    function hideAlert() {
      const alert = document.getElementById('alert');
      alert.classList.add('opacity-0');
    }

    // Login handler
    async function handleLogin(event) {
      event.preventDefault();
      
      const email = document.getElementById('login-email').value;
      const password = document.getElementById('login-password').value;

      try {
        const response = await fetch('/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, password })
        });

        const data = await response.json();

        if (response.ok) {
          window.location.href = '/dashboard';
        } else {
          showAlert(data.error || 'Failed to sign in');
        }
      } catch (error) {
        showAlert('An error occurred while signing in');
      }
    }

    // Register handler
    async function handleRegister(event) {
      event.preventDefault();
      
      const username = document.getElementById('register-username').value;
      const email = document.getElementById('register-email').value;
      const password = document.getElementById('register-password').value;
      const recaptchaResponse = grecaptcha.getResponse();

      if (!recaptchaResponse) {
        showAlert('Please complete the reCAPTCHA');
        return;
      }

      try {
        const response = await fetch('/auth/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            username,
            email,
            password,
            recaptchaResponse
          })
        });

        const data = await response.json();

        if (response.ok) {
          showAlert('Account created successfully! Please sign in.');
          setTimeout(() => showSignInForm(), 1500);
        } else {
          showAlert(data.error || 'Failed to create account');
        }
      } catch (error) {
        showAlert('An error occurred while creating your account');
      }
    }

    // Password reset handler
    async function handlePasswordReset(event) {
      event.preventDefault();
      
      const email = document.getElementById('reset-email').value;
      const recaptchaResponse = grecaptcha.getResponse();

      if (!recaptchaResponse) {
        showAlert('Please complete the reCAPTCHA');
        return;
      }

      try {
        const response = await fetch('/auth/reset-password-request', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email,
            recaptchaResponse
          })
        });

        const data = await response.json();

        if (response.ok) {
          showAlert('Password reset link has been sent to your email');
          setTimeout(() => showSignInForm(), 1500);
        } else {
          showAlert(data.error || 'Failed to send reset link');
        }
      } catch (error) {
        showAlert('An error occurred while requesting password reset');
      }
    }

    // Magic link handler
    async function requestMagicLink() {
      const email = document.getElementById('login-email').value;
      
      if (!email) {
        showAlert('Please enter your email first');
        return;
      }

      try {
        const response = await fetch('/auth/magic-link', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email,
            recaptchaResponse: grecaptcha.getResponse()
          })
        });

        const data = await response.json();

        if (response.ok) {
          showAlert('Magic link has been sent to your email');
        } else {
          showAlert(data.error || 'Failed to send magic link');
        }
      } catch (error) {
        showAlert('An error occurred while requesting magic link');
      }
    }

    // Font handling code
    const fontStyles = document.createElement('style');
    fontStyles.textContent = `
    @font-face {
      font-family: 'Mozilla Headline';
      src: url('../assets/MozillaHeadline-Variable.woff2') format('woff2'),
           url('../assets/MozillaHeadline-Variable.woff') format('woff'),
           url('../assets/MozillaHeadline-Variable.ttf') format('truetype');
      font-weight: 100 900;
      font-style: normal;
    }

    @font-face {
      font-family: 'Mozilla Text';
      src: url('../assets/MozillaText-Variable.woff2') format('woff2'),
           url('../assets/MozillaText-Variable.woff') format('woff'),
           url('../assets/MozillaText-Variable.ttf') format('truetype');
      font-weight: 100 900;
      font-style: normal;
    }
    `;
    document.head.appendChild(fontStyles);

    const replaceFonts = () => {
      const elements = document.querySelectorAll('*');
      elements.forEach(el => {
        const style = window.getComputedStyle(el);
        const fontFamily = style.getPropertyValue('font-family');
        
        if (fontFamily.includes('Inter')) {
          if (el.tagName.match(/^H[1-6]$/)) {
            el.style.fontFamily = '"Mozilla Headline", sans-serif';
          } else {
            el.style.fontFamily = '"Mozilla Text", sans-serif';
          }
        }
      });
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', replaceFonts);
    } else {
      replaceFonts();
    }

    const observer = new MutationObserver(replaceFonts);
    observer.observe(document.body, {
      childList: true,
      subtree: true
    });
  </script>
</body>
</html>